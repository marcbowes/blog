#+TITLE: marc-bowes.com

* [[file:/Users/bowes/code/blog/src/org/content/dsql-auth-troubleshooting.org][Troubleshooting problems with DSQL auth]]
:PROPERTIES:
:RSS_PERMALINK: dsql-auth-troubleshooting.html
:PUBDATE:  2025-06-10
:ID:       fdcf6f80-9ba2-4a9b-a03f-fcd960cb1be2
:END:
#+setupfile: ../templates/level0.org

Troubleshooting problems with DSQL auth

In this article, we'll look at some of the common ways folks get tripped up
configuring their clients and credentials.

Before continuing, I recommend reading [[file:dsql-auth.org][Aurora DSQL: How authentication and
authorization works]], which should give you a robust mental model of how things
work end to end.
* [[file:/Users/bowes/code/blog/src/org/content/dsql-avoid-hot-keys.org][Aurora DSQL Best Practices: Avoid Hot keys]]
:PROPERTIES:
:RSS_PERMALINK: dsql-avoid-hot-keys.html
:PUBDATE:  2025-06-06
:ID:       5c913c90-4fc4-42e5-9559-836a752597e4
:END:
#+setupfile: ../templates/level0.org
Aurora DSQL Best Practices: Avoid hot keys

In the [[file:dsql-circle-of-life.org][Circle of Life]], I describe the /flow/ of data in Aurora DSQL. Data flows
from the Query Processor (QP), through the journal, and into storage. Once in
storage, it can be queried by future transactions.

[[file:images/circle1.png]]
* [[file:/Users/bowes/code/blog/src/org/content/dsql-how-to-spend-a-dollar.org][Aurora DSQL: How to spend a dollar]]
:PROPERTIES:
:RSS_PERMALINK: dsql-how-to-spend-a-dollar.html
:PUBDATE:  2025-06-02
:ID:       1bc44d7a-b98c-496c-a76d-9d1a1a7991f9
:END:
#+setupfile: ../templates/level0.org
Aurora DSQL: How to spend a dollar

From [[https://aws.amazon.com/rds/aurora/dsql/pricing/][Amazon Aurora DSQL pricing]]:

#+begin_quote
Aurora DSQL measures all request-based activity, such as query processing,
reads, and writes, using a single normalized billing unit called Distributed
Processing Unit (DPU). Storage is billed based on the total size of your
database, measured in GB-month. Aurora DSQL ensures your data is available and
strongly consistent across three Availability Zones in an AWS Region. You are
only charged for one logical copy of your data.
#+end_quote
* [[file:/Users/bowes/code/blog/src/org/content/dsql-circle-of-life.org][Aurora DSQL and the Circle of Life]]
:PROPERTIES:
:RSS_PERMALINK: dsql-circle-of-life.html
:PUBDATE:  2025-05-23
:ID:       3a725c27-42b8-4883-b599-e1907b5f9f28
:END:
#+setupfile: ../templates/level0.org
Aurora DSQL and the Circle of Life

#+header: :exports results
#+begin_src ditaa :file images/circle0.png :noeval
          +------------+
reads     | {s}        |  apply changes
    +---->|   Storage  |<----+
| +------------+ |
/--------\     /------+                     |
* [[file:/Users/bowes/code/blog/src/org/content/postgres-direct-tls.org][How direct TLS can speed up your connections]]
:PROPERTIES:
:RSS_PERMALINK: postgres-direct-tls.html
:PUBDATE:  2025-05-21
:ID:       4239b594-55a5-43c4-ba8d-80560ef2c4db
:END:
#+setupfile: ../templates/level0.org
How direct TLS can speed up your connections

A few months ago, one of my Aurora DSQL teammates reported a curious finding.
When connecting to their DSQL clusters using the corporate VPN, their
connections were fast and snappy - as they should be! But, when connecting
/without using the VPN/, their connections were taking around 3 seconds.
Curiously, this was only happening when in the AWS offices.

** Discovery
:PROPERTIES:
:ID:       439edd01-dba9-417a-b7e0-f52c631e960f
:END:

The trigger for this discovery was the public Preview of Aurora DSQL at
re:Invent 2024. Before the public release, access to DSQL had been restricted,
requiring developers to be on the corporate VPN. Developers started to interact
with DSQL off-VPN, and realized it was slower - way slower - than before.
* [[file:/Users/bowes/code/blog/src/org/content/dsql-auth.org][Aurora DSQL: How authentication and authorization works]]
:PROPERTIES:
:RSS_PERMALINK: dsql-auth.html
:PUBDATE:  2025-05-13
:ID:       f04f0293-5dbe-4538-b716-1fea4e744b29
:END:
#+setupfile: ../templates/level0.org
Aurora DSQL: How authentication and authorization works

In this article, I'm going to explain how connections to Aurora DSQL are
authenticated and authorized. This information is meant to be supplemental to
what is found in the official [[https://docs.aws.amazon.com/aurora-dsql/][Amazon Aurora DSQL]] documentation.

This is a "nuts and bolts" explanation, rather than a "how to" guide. After
reading this article you should understand:
